{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineNestedType,\n  defineDocumentType,\n  makeSource\n} from 'contentlayer2/source-files';\n\nconst Attorney = defineDocumentType(() => ({\n  name: \"Attorney\",\n  filePathPattern: `attorneys/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    name: {\n      type: \"string\",\n      description: \"The name of the attorney\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date created\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n      description: \"The featurted image of the attorney post\",\n      required: true,\n    },\n    order: {\n      type: \"string\",\n      description: \"Order for desc or asc\",\n      required: true,\n    },\n    expertise: {\n      type: \"string\",\n      description: \"The role of the attorney\",\n      required: true,\n    },\n    email: {\n      type: \"string\",\n      description: \"The email address of the attorney\",\n    },\n    phone: {\n      type: \"string\",\n      description: \"The phone number of the attorney\",\n    }\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    }\n  }\n}));\n\nconst Practicing = defineDocumentType(() => ({\n  name: \"Practicing\",\n  filePathPattern: `practicing-area/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the practicing\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n      description: \"The featured image of the practicing\",\n      required: true,\n    },\n    order: {\n      type: \"string\",\n      description: \"The order of the practicing\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    }\n  }\n}));\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `blog/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    excerpt: {\n      type: \"string\",\n      description: \"The excerpt of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n    image: {\n      type: \"string\",\n      description: \"The featured image of the post\",\n      required: true,\n    },\n    author: {\n      type: \"string\",\n      description: \"The author image of the post\",\n      required: true,\n    },\n    categories: {\n      type: \"list\",\n      of: Category,\n      description: \"The categories of the post\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    }\n  }\n}));\n\nconst Category = defineNestedType(() => ({\n  name: \"Category\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the category\",\n      required: true,\n    }\n  }\n}));\n\n\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Attorney, Practicing, Post],\n})"],
  "mappings": "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",
  "names": []
}
